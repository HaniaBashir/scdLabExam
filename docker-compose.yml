version: '3.8'

services:
  mongo:
    image: mongo:4.4
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER:-root}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD:-example}
    volumes:
      - mongo_data:/data/db
    networks:
      - app_network

  api:
    build:
      context: ./Server
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - mongo
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - PORT=5000
      - MONGO_DB=mongodb://${MONGO_USER:-root}:${MONGO_PASSWORD:-example}@mongo:27017/social_media_db?authSource=admin
      - JWT_KEY=${JWT_KEY:-defaultsecret}
      - CORS_ORIGIN=${CORS_ORIGIN:-*}
    deploy:
      replicas: 3
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
    networks:
      - app_network

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./client/build:/usr/share/nginx/html:ro
    depends_on:
      - api
    networks:
      - app_network

  #frontend
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    volumes:
      - ./client:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost/api
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  mongo_data: